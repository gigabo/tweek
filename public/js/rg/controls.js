// Generated by CoffeeScript 1.8.0
(function() {
  require.def(['rg/debug'], (function(_this) {
    return function(Debug) {
      var Controls;
      return Controls = (function() {
        function Controls(game) {
          this.game = game;
          this.init();
        }

        Controls.prototype.add_listener = function(f) {
          var id;
          id = this.listener_id_seq++;
          this.listeners[id] = f;
          return id;
        };

        Controls.prototype.remove_listener = function(id) {
          return delete this.listeners[id];
        };

        Controls.prototype.handle_event = function(e, down) {
          var key, listener, mapped, _i, _len, _ref, _results;
          key = e.keyCode;
          mapped = this.map[key];
          this[mapped] = down;
          if (!down) {
            switch (mapped) {
              case 'down':
                this.game.toggle_hud();
                break;
              case 'p':
              case 'q':
                if (this.game.running) {
                  this.game.stop();
                } else {
                  this.game.start();
                }
            }
          }
          _ref = _(this.listeners).values();
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            listener = _ref[_i];
            _results.push(listener());
          }
          return _results;
        };

        Controls.prototype.thrust_on = function() {
          return !this.space;
        };

        Controls.prototype.rotate_l = function() {
          return this.left && !this.game.finishing();
        };

        Controls.prototype.rotate_r = function() {
          return this.right && !this.game.finishing();
        };

        Controls.prototype.init = function() {
          this.init_map();
          this.listeners = {};
          this.listener_id_seq = 0;
          $(document).keydown((function(_this) {
            return function(e) {
              return _this.handle_event(e, true);
            };
          })(this));
          $(document).keyup((function(_this) {
            return function(e) {
              return _this.handle_event(e, false);
            };
          })(this));
          return $(document).keydown((function(_this) {
            return function(e) {
              if (_this.map[e.keyCode] === 'down') {
                return e.preventDefault();
              }
            };
          })(this));
        };

        Controls.prototype.init_map = function() {
          this.space = false;
          this.left = false;
          this.right = false;
          this.up = false;
          this.down = false;
          this.p = this.q = false;
          return this.map = {
            37: 'left',
            39: 'right',
            38: 'up',
            40: 'down',
            32: 'space',
            80: 'p',
            81: 'q'
          };
        };

        return Controls;

      })();
    };
  })(this));

}).call(this);
