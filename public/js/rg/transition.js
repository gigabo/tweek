// Generated by CoffeeScript 1.8.0
(function() {
  require.def(['rg/debug', 'rg/dialog'], (function(_this) {
    return function(Debug, Dialog) {
      var Transition;
      return Transition = (function() {
        function Transition(game) {
          this.game = game;
          this.advance = this.done = false;
          this.dialog = new Dialog(this.game, this.game.width * .75, this.game.height * .75, 'top');
          if (!this.game.level.no_score) {
            this.dialog.option('left', "Try Again");
          }
          this.dialog.option('right', "On to Level " + (this.game.level_number + 1));
          this.l_was_up = this.r_was_up = false;
          this.finishing = false;
        }

        Transition.prototype.step = function() {
          if (this.game.level.outro_done()) {
            this.dialog.step();
          } else {
            this.game.level.outro_step();
          }
          this.done = this.dialog.selected && (this.dialog.done() || !this.dialog.started());
          if (this.dialog.selected) {
            if (this.dialog.selected === 'right') {
              return this.advance = true;
            }
          }
        };

        Transition.prototype.draw = function(graphics) {
          this.game.level.outro_draw(graphics);
          if (this.game.level.outro_done()) {
            return this.dialog.draw(graphics);
          }
        };

        Transition.prototype.get_controls = function() {
          this.l_down = this.game.controls.left;
          this.r_down = this.game.controls.right;
          if (!this.l_down) {
            this.l_was_up = true;
          }
          if (!this.r_down) {
            this.r_was_up = true;
          }
          if (!this.l_was_up) {
            this.l_down = false;
          }
          if (!this.r_was_up) {
            this.r_down = false;
          }
          if (this.game.level.no_score) {
            return this.l_down = false;
          }
        };

        return Transition;

      })();
    };
  })(this));

}).call(this);
