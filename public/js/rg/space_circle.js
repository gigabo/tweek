// Generated by CoffeeScript 1.8.0
(function() {
  require.def(['rg/debug'], (function(_this) {
    return function(Debug) {
      var SpaceCircle;
      return SpaceCircle = (function() {
        function SpaceCircle(game, x, y, r) {
          this.game = game;
          this.x = x;
          this.y = y;
          this.r = r;
          this.reset();
        }

        SpaceCircle.prototype.step = function() {
          if (!this.hit) {
            return this.check_hit();
          }
        };

        SpaceCircle.prototype.red = function() {
          return 0;
        };

        SpaceCircle.prototype.green = function() {
          return 0;
        };

        SpaceCircle.prototype.blue = function() {
          return 0;
        };

        SpaceCircle.prototype.fill = function() {
          return false;
        };

        SpaceCircle.prototype.draw = function(graphics) {
          var b, ctx, fill, g, r;
          ctx = graphics.ctx;
          ctx.lineWidth = 4;
          r = this.red();
          g = this.green();
          b = this.blue();
          fill = this.fill();
          if (this.fill()) {
            ctx.fillStyle = "rgba(" + r + ", " + g + ", " + b + ", 1)";
            return graphics.circle_fill(this.x, this.y, this.r);
          } else {
            ctx.strokeStyle = "rgba(" + r + ", " + g + ", " + b + ", 1)";
            return graphics.circle_stroke(this.x, this.y, this.r);
          }
        };

        SpaceCircle.prototype.done = function() {
          return this.hit;
        };

        SpaceCircle.prototype.reset = function() {
          return this.hit = false;
        };

        SpaceCircle.prototype.check_hit = function() {
          var d, dx, dy, p, _i, _len, _ref, _results;
          _ref = [this.game.level.protagonist.front(), this.game.level.protagonist.back()];
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            p = _ref[_i];
            dx = p.x - this.x;
            dy = p.y - this.y;
            d = Math.sqrt(dx * dx + dy * dy);
            if (d <= this.r) {
              _results.push(this.hit = true);
            } else {
              _results.push(void 0);
            }
          }
          return _results;
        };

        return SpaceCircle;

      })();
    };
  })(this));

}).call(this);
